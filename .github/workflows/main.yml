# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, development ]
  pull_request:
    branches: [ master, development ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '8'

      - name: Cache Spigot Dependencies
        id: cache-spigot-dependencies
        uses: actions/cache@v2
        with:
          path: /home/runner/.m2/repository/org/spigotmc
          key: spigot-dependencies

      - name: Cache Forge Dependencies
        id: cache-forge-dependencies
        uses: actions/cache@v2
        with:
          path: /home/runner/.gradle/caches/minecraft
          key: forge-dependencies

      - name: Cache Vault Dependency
        id: cache-vault-dependency
        uses: actions/cache@v2
        with:
          path: /home/runner/.m2/repository/net/milkbowlvault
          key: forge-dependencies

      - name: Build Java Application
        run: |
          chmod +x gradlew
          ./gradlew assemble || ./gradlew setupDecompWorkspace && ./gradlew assemble || ./gradlew downloadDependencies
          ./gradlew clean build shadowJar

      - name: Publish Test Report
        run: |
          ./gradlew jacocoTestReport
          bash <(curl -s https://codecov.io/bash)
        # Disabled ./travis-status.sh success $WEBHOOK_URL # TODO: Replace it with new BOT

      - name: Publish Snapshot
        if: "contains(github.event.head_commit.message, '--snapshot')"
        env:
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_KEY_FILE: ${{ secrets.SIGNING_KEY_FILE }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: |
          gpg2 --batch --cipher-algo AES256 --passphrase ${{ secrets.SIGNING_KEY_PASSWORD }} travis_secret_key.gpg
          ./gradlew publish > /dev/null
          java -jar blockball-tools/build/libs/Deploy.jar --snapshot ${{ secrets.DISCORD_WEBHOOK_SNAPSHOT }}
          java -jar blockball-tools/build/libs/Deploy.jar --snapshot ${{ secrets.DISCORD_WEBHOOK_CHANNEL }}

      - name: Publish Release
        if: "contains(github.event.head_commit.message, '--release') && contains(github.ref, 'master')"
        env:
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_KEY_FILE: ${{ secrets.SIGNING_KEY_FILE }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: |
          gpg2 --batch --cipher-algo AES256 --passphrase ${{ secrets.SIGNING_KEY_PASSWORD }} travis_secret_key.gpg
          echo "RELEASE_VERSION=$(./gradlew -q printVersion)" >> $GITHUB_ENV
          java -jar blockball-tools/build/libs/Deploy.jar --snapshot ${{ secrets.DISCORD_WEBHOOK_SNAPSHOT }}
          java -jar blockball-tools/build/libs/Deploy.jar --snapshot ${{ secrets.DISCORD_WEBHOOK_CHANNEL }}

      - name: Create Github Release
        if: "contains(github.event.head_commit.message, '--release') && contains(github.ref, 'master')"
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: "This release was automatically created by Github Actions. Please wait until the author manually sets the patchnotes for this release."
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false

      - name: Upload Bukkit Release to Github
        if: "contains(github.event.head_commit.message, '--release') && contains(github.ref, 'master')"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/work/BlockBall/BlockBall/blockball-bukkit-plugin/build/libs/blockball-bukkit-plugin-${{ env.RELEASE_VERSION }}.jar
          asset_name: BlockBall.jar
          asset_content_type: application/jar

  Documentation:
    runs-on: ubuntu-latest
    if: "contains(github.ref, 'master')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Build Documentation
        run: |
          git pull
          git config --global user.email "shynixn@email.com" && git config --global user.name "Shynixn CI Actions"
          sudo apt-get install python3-pip
          sudo apt-get install python3-setuptools
          sudo pip3 install https://github.com/Shynixn/sphinx_rtd_theme/releases/download/C1.0/sphinx_rtd_theme.zip
          sudo pip3 install sphinx
          rm -rf docs/build
          rm -rf docs/apidocs
          chmod +x gradlew
          ./gradlew generateJavaDocPages > /dev/null
          sudo python3 -msphinx -M html docs/source docs/build
          git add docs
          git add -f docs/build
          git commit --message "Automatic CI Documentation."
          git push --quiet https://Shynixn:${{ secrets.GITHUB_TOKEN }}@github.com/Shynixn/BlockBall.git HEAD:master
